Step 0:  (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) (A (fun b -> b))) (fun c -> c)))
Step 1:  ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) (fun b -> b)))
Step 1:  ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) (fun b -> b)))
Step 2:  ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) (fun b -> b)) (fun c -> c))))
Step 2:  ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) (fun b -> b)) (fun c -> c))))
Step 3:  ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) (with (handler {A(x; k) -> (k (k x))}) handle ((fun b -> b) (fun c -> c))))
Step 3:  ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) (with (handler {A(x; k) -> (k (k x))}) handle ((fun b -> b) (fun c -> c))))
Step 4:  ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) (with (handler {A(x; k) -> (k (k x))}) handle (fun c -> c)))
Step 4:  ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) (with (handler {A(x; k) -> (k (k x))}) handle (fun c -> c)))
Step 5:  ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) (fun c -> c))
Step 5:  ((fun y -> (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) y) (fun c -> c)))) (fun c -> c))
Step 6:  (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) (fun c -> c)) (fun c -> c)))
Step 6:  (with (handler {A(x; k) -> (k (k x))}) handle (((fun a -> a) (fun c -> c)) (fun c -> c)))
Step 7:  (with (handler {A(x; k) -> (k (k x))}) handle ((fun c -> c) (fun c -> c)))
Step 7:  (with (handler {A(x; k) -> (k (k x))}) handle ((fun c -> c) (fun c -> c)))
Step 8:  (with (handler {A(x; k) -> (k (k x))}) handle (fun c -> c))
Step 8:  (with (handler {A(x; k) -> (k (k x))}) handle (fun c -> c))
Step 9:  (fun c -> c)
Result:  (fun c -> c)
