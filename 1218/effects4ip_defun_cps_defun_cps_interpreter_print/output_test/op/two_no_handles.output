
  eval
    exp: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle ((fun b -> b) (with (handler {B(x; k) -> 2}) handle ((fun c -> c) (C 3))))))
    in : 8
    out: 8

  eval
    exp: (with (handler {A(x; k) -> 1}) handle ((fun b -> b) (with (handler {B(x; k) -> 2}) handle ((fun c -> c) (C 3)))))
    in : ((fun a -> a) 8)
    out: 8

  eval
    exp: (handler {A(x; k) -> 1})
    in : ((fun a -> a) (with 8 handle ((fun b -> b) (with (handler {B(x; k) -> 2}) handle ((fun c -> c) (C 3))))))
    out: 8

  apply_in
    exp: (handler {A(x; k) -> 1})
    in : ((fun a -> a) (with 8 handle ((fun b -> b) (with (handler {B(x; k) -> 2}) handle ((fun c -> c) (C 3))))))
    out: 8

  eval
    exp: ((fun b -> b) (with (handler {B(x; k) -> 2}) handle ((fun c -> c) (C 3))))
    in : 8
    out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle 8))

  eval
    exp: (with (handler {B(x; k) -> 2}) handle ((fun c -> c) (C 3)))
    in : ((fun b -> b) 8)
    out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle 8))

  eval
    exp: (handler {B(x; k) -> 2})
    in : ((fun b -> b) (with 8 handle ((fun c -> c) (C 3))))
    out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle 8))

  apply_in
    exp: (handler {B(x; k) -> 2})
    in : ((fun b -> b) (with 8 handle ((fun c -> c) (C 3))))
    out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle 8))

  eval
    exp: ((fun c -> c) (C 3))
    in : 8
    out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle ((fun b -> b) (with (handler {B(x; k) -> 2}) handle 8))))

  eval
    exp: (C 3)
    in : ((fun c -> c) 8)
    out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle ((fun b -> b) (with (handler {B(x; k) -> 2}) handle 8))))

  eval
    exp: 3
    in : ((fun c -> c) (C 8))
    out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle ((fun b -> b) (with (handler {B(x; k) -> 2}) handle 8))))

  apply_in
    exp: 3
    in : ((fun c -> c) (C 8))
    out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle ((fun b -> b) (with (handler {B(x; k) -> 2}) handle 8))))

  apply_out
    exp: (C 3)
      in : ((fun c -> c) 8)
      out: 8
    in : 8
    out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle ((fun b -> b) (with (handler {B(x; k) -> 2}) handle 8))))

  apply_out
    exp: (C 3)
      in : ((fun c -> c) 8)
      out: ((fun b -> b) (with (handler {B(x; k) -> 2}) handle 8))
    in : 8
    out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle 8))

  apply_out
    exp: (C 3)
      in : ((fun c -> c) 8)
      out: ((fun a -> a) (with (handler {A(x; k) -> 1}) handle ((fun b -> b) (with (handler {B(x; k) -> 2}) handle 8))))
    in : 8
    out: 8
Error: no handlers for C
