Step 0:  (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (((fun c -> c) (A 2)) (A 4)))
Step 1:  ((fun a -> a) ((fun y => (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (((fun c -> c) (A 2)) y))) (fun b -> b)))
Step 1:  ((fun a -> a) ((fun y => (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (((fun c -> c) (A 2)) y))) (fun b -> b)))
Step 2:  ((fun a -> a) (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (((fun c -> c) (A 2)) (fun b -> b))))
Step 2:  ((fun a -> a) (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (((fun c -> c) (A 2)) (fun b -> b))))
Step 3:  ((fun a -> a) ((fun a -> a) ((fun z => (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (((fun c -> c) z) (fun b -> b)))) (fun b -> b))))
Step 3:  ((fun a -> a) ((fun a -> a) ((fun z => (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (((fun c -> c) z) (fun b -> b)))) (fun b -> b))))
Step 4:  ((fun a -> a) ((fun a -> a) (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (((fun c -> c) (fun b -> b)) (fun b -> b)))))
Step 4:  ((fun a -> a) ((fun a -> a) (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (((fun c -> c) (fun b -> b)) (fun b -> b)))))
Step 5:  ((fun a -> a) ((fun a -> a) (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle ((fun b -> b) (fun b -> b)))))
Step 5:  ((fun a -> a) ((fun a -> a) (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle ((fun b -> b) (fun b -> b)))))
Step 6:  ((fun a -> a) ((fun a -> a) (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (fun b -> b))))
Step 6:  ((fun a -> a) ((fun a -> a) (with (handler {A(x; k) -> ((fun a -> a) (k (fun b -> b)))}) handle (fun b -> b))))
Step 7:  ((fun a -> a) ((fun a -> a) (fun b -> b)))
Step 7:  ((fun a -> a) ((fun a -> a) (fun b -> b)))
Step 8:  ((fun a -> a) (fun b -> b))
Step 8:  ((fun a -> a) (fun b -> b))
Step 9:  (fun b -> b)
Result:  (fun b -> b)
