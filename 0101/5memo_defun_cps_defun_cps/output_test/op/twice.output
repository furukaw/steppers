Step 0:  (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((A (fun a -> a)) (A (fun b -> b))))
Step 1:  ((fun y => (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((A (fun a -> a)) y))) (fun b -> b))
Step 1:  ((fun y => (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((A (fun a -> a)) y))) (fun b -> b))
Step 2:  (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((A (fun a -> a)) (fun b -> b)))
Step 2:  (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((A (fun a -> a)) (fun b -> b)))
Step 3:  ((fun z => (with (handler {return x -> x, A(x; k) -> (k x)}) handle (z (fun b -> b)))) (fun a -> a))
Step 3:  ((fun z => (with (handler {return x -> x, A(x; k) -> (k x)}) handle (z (fun b -> b)))) (fun a -> a))
Step 4:  (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun a -> a) (fun b -> b)))
Step 4:  (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun a -> a) (fun b -> b)))
Step 5:  (with (handler {return x -> x, A(x; k) -> (k x)}) handle (fun b -> b))
Step 5:  (with (handler {return x -> x, A(x; k) -> (k x)}) handle (fun b -> b))
Step 6:  (fun b -> b)
Result:  (fun b -> b)
