
  eval
    exp : (reset (fun () -> (reset (fun () -> (fun a -> (reset (fun () -> a)))))))
    oin : 8
    xin : 8
    oout: 8
    xout: 8

  eval
    exp : (reset (fun () -> (fun a -> (reset (fun () -> a)))))
    oin : 8
    xin : 8
    oout: (reset (fun () -> 8))
    xout: (reset (fun () -> 8))

  eval
    exp : (fun a -> (reset (fun () -> a)))
    oin : 8
    xin : 8
    oout: (reset (fun () -> (reset (fun () -> 8))))
    xout: (reset (fun () -> (reset (fun () -> 8))))

  apply_in
    exp : (fun a -> (reset (fun () -> a)))
    oin : 8
    oout: (reset (fun () -> (reset (fun () -> 8))))
    xout: (reset (fun () -> (reset (fun () -> 8))))

  apply_out
    exp : (fun a -> (reset (fun () -> a)))
    oout: (reset (fun () -> (reset (fun () -> 8))))
Step 0:  (reset (fun () -> (reset (fun () -> (fun a -> (reset (fun () -> a)))))))
Step 1:  (reset (fun () -> (fun a -> (reset (fun () -> a)))))

  apply_in
    exp : (fun a -> (reset (fun () -> a)))
    oin : 8
    oout: (reset (fun () -> 8))
    xout: (reset (fun () -> 8))

  apply_out
    exp : (fun a -> (reset (fun () -> a)))
    oout: (reset (fun () -> 8))
Step 1:  (reset (fun () -> (fun a -> (reset (fun () -> a)))))
Step 2:  (fun a -> (reset (fun () -> a)))

  apply_in
    exp : (fun a -> (reset (fun () -> a)))
    oin : 8
    oout: 8
    xout: 8

  apply_out
    exp : (fun a -> (reset (fun () -> a)))
    oout: 8
Result:  (fun a -> (reset (fun () -> a)))
