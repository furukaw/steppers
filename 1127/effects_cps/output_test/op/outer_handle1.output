Step 0:  ((fun d -> d) (with (handler {A(x; k) -> (fun a -> (k x))}) handle (with (handler {B(x; k) -> (fun b -> (k x))}) handle (A (fun c -> c)))))
Step 1:  ((fun d -> d) (fun a -> ((fun y => (with (handler {A(x; k) -> (fun a -> (k x))}) handle (with (handler {B(x; k) -> (fun b -> (k x))}) handle y))) (fun c -> c))))
Step 1:  ((fun d -> d) (fun a -> ((fun y => (with (handler {A(x; k) -> (fun a -> (k x))}) handle (with (handler {B(x; k) -> (fun b -> (k x))}) handle y))) (fun c -> c))))
Step 2:  (fun a -> ((fun y => (with (handler {A(x; k) -> (fun a -> (k x))}) handle (with (handler {B(x; k) -> (fun b -> (k x))}) handle y))) (fun c -> c)))
Result:  (fun a -> ((fun y => (with (handler {A(x; k) -> (fun a -> (k x))}) handle (with (handler {B(x; k) -> (fun b -> (k x))}) handle y))) (fun c -> c)))
