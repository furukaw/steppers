Step 0:  ((fun a -> a) (with (handler {A(x; k) -> (k x)}) handle ((A ((fun b -> b) (fun c -> c))) (fun d -> d))))
Step 1:  ((fun a -> a) (with (handler {A(x; k) -> (k x)}) handle ((A (fun c -> c)) (fun d -> d))))
Step 1:  ((fun a -> a) (with (handler {A(x; k) -> (k x)}) handle ((A (fun c -> c)) (fun d -> d))))
Step 2:  ((fun a -> a) ((fun y => (with (handler {A(x; k) -> (k x)}) handle (y (fun d -> d)))) (fun c -> c)))
Step 2:  ((fun a -> a) ((fun y => (with (handler {A(x; k) -> (k x)}) handle (y (fun d -> d)))) (fun c -> c)))
Step 3:  ((fun a -> a) (with (handler {A(x; k) -> (k x)}) handle ((fun c -> c) (fun d -> d))))
Step 3:  ((fun a -> a) (with (handler {A(x; k) -> (k x)}) handle ((fun c -> c) (fun d -> d))))
Step 4:  ((fun a -> a) (with (handler {A(x; k) -> (k x)}) handle (fun d -> d)))
Step 4:  ((fun a -> a) (with (handler {A(x; k) -> (k x)}) handle (fun d -> d)))
Step 5:  ((fun a -> a) (fun d -> d))
Step 5:  ((fun a -> a) (fun d -> d))
Stpe 6:  (fun d -> d)
Result:  (fun d -> d)
