Step 0:  ((with (handler {A(x; k) -> (fun a -> x)}) handle (with (handler {A(x; k) -> ((fun b -> (A x)) k)}) handle ((fun c -> c) (A (fun d -> d))))) (fun e -> e))
Step 1:  ((with (handler {A(x; k) -> (fun a -> x)}) handle ((fun b -> (A (fun d -> d))) (fun y => (with (handler {A(x; k) -> ((fun b -> (A x)) k)}) handle ((fun c -> c) y))))) (fun e -> e))
Step 1:  ((with (handler {A(x; k) -> (fun a -> x)}) handle ((fun b -> (A (fun d -> d))) (fun y => (with (handler {A(x; k) -> ((fun b -> (A x)) k)}) handle ((fun c -> c) y))))) (fun e -> e))
Step 2:  ((with (handler {A(x; k) -> (fun a -> x)}) handle (A (fun d -> d))) (fun e -> e))
Step 2:  ((with (handler {A(x; k) -> (fun a -> x)}) handle (A (fun d -> d))) (fun e -> e))
Step 3:  ((fun a -> (fun d -> d)) (fun e -> e))
Step 3:  ((fun a -> (fun d -> d)) (fun e -> e))
Step 4:  (fun d -> d)
Result:  (fun d -> d)
