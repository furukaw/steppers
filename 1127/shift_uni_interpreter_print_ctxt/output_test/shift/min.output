
  eval
    exp: (reset (fun () -> (shift (fun k -> k))))
    in : 8
    out: 8

  eval
    exp: (shift (fun k -> k))
    in : 8
    out: (reset (fun () -> 8))

  eval
    exp: (reset (fun () -> (fun x => (reset (fun () -> x)))))
    in : 8
    out: 8

  eval
    exp: (fun x => (reset (fun () -> x)))
    in : 8
    out: (reset (fun () -> 8))

  apply_in
    exp: (fun x => (reset (fun () -> x)))
    in : 8
    out: (reset (fun () -> 8))

  apply_out
    exp: (fun x => (reset (fun () -> x)))
    in : 8
    out: (reset (fun () -> 8))

  apply_in
    exp: (fun x => (reset (fun () -> x)))
    in : 8
    out: 8

  apply_out
    exp: (fun x => (reset (fun () -> x)))
    in : 8
    out: 8
Result:  (fun x => (reset (fun () -> x)))
