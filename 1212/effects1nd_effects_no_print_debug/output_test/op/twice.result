
  eval
    exp : (with (handler {A(x; k) -> (k x)}) handle ((A (fun a -> a)) (A 1)))

  eval
    exp : (handler {A(x; k) -> (k x)})

  apply_in with
    exp : (handler {A(x; k) -> (k x)})

  eval
    exp : ((A (fun a -> a)) (A 1))

  eval
    exp : (A 1)

  eval
    exp : 1

  apply_in op
    exp : 1

  eval
    exp : (<cont> 1)

  eval
    exp : 1

  apply app2
    exp : 1

  eval
    exp : <cont>

  apply app1
    exp : <cont>
Result:  1
