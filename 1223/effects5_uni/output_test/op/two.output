Step 0:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle ((A (((fun c -> c) (fun d -> d)) (fun e -> e))) (fun f -> f))) (fun g -> g))) (fun h -> h))
Step 1:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle ((A ((fun d -> d) (fun e -> e))) (fun f -> f))) (fun g -> g))) (fun h -> h))
Step 1:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle ((A ((fun d -> d) (fun e -> e))) (fun f -> f))) (fun g -> g))) (fun h -> h))
Step 2:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle ((A (fun e -> e)) (fun f -> f))) (fun g -> g))) (fun h -> h))
Step 2:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle ((A (fun e -> e)) (fun f -> f))) (fun g -> g))) (fun h -> h))
Step 3:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun b -> (b (A ((fun y => (with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle (y (fun f -> f)))) (fun e -> e))))) (fun g -> g))) (fun h -> h))
Step 3:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun b -> (b (A ((fun y => (with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle (y (fun f -> f)))) (fun e -> e))))) (fun g -> g))) (fun h -> h))
Step 4:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) (A ((fun y => (with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle (y (fun f -> f)))) (fun e -> e))))) (fun h -> h))
Step 4:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) (A ((fun y => (with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle (y (fun f -> f)))) (fun e -> e))))) (fun h -> h))
Step 5:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) (A (with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle ((fun e -> e) (fun f -> f)))))) (fun h -> h))
Step 5:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) (A (with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle ((fun e -> e) (fun f -> f)))))) (fun h -> h))
Step 6:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) (A (with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle (fun f -> f))))) (fun h -> h))
Step 6:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) (A (with (handler {A(x; k) -> (fun b -> (b (A (k x))))}) handle (fun f -> f))))) (fun h -> h))
Step 7:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) (A (fun f -> f)))) (fun h -> h))
Step 7:  ((with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) (A (fun f -> f)))) (fun h -> h))
Step 8:  ((fun a -> (a ((fun z => (with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) z))) (fun f -> f)))) (fun h -> h))
Step 8:  ((fun a -> (a ((fun z => (with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) z))) (fun f -> f)))) (fun h -> h))
Step 9:  ((fun h -> h) ((fun z => (with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) z))) (fun f -> f)))
Step 9:  ((fun h -> h) ((fun z => (with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) z))) (fun f -> f)))
Step 10:  ((fun h -> h) (with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) (fun f -> f))))
Step 10:  ((fun h -> h) (with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle ((fun g -> g) (fun f -> f))))
Step 11:  ((fun h -> h) (with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle (fun f -> f)))
Step 11:  ((fun h -> h) (with (handler {A(x; k) -> (fun a -> (a (k x)))}) handle (fun f -> f)))
Step 12:  ((fun h -> h) (fun f -> f))
Step 12:  ((fun h -> h) (fun f -> f))
Step 13:  (fun f -> f)
Result:  (fun f -> f)
