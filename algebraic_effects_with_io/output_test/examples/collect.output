Step 0:  with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (((fun x -> print(x; y. y)) "A"; (fun x -> print(x; y. y)) "B"); (fun x -> print(x; y. y)) "C")
Step 1:  with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle ((print("A"; y. y); (fun x -> print(x; y. y)) "B"); (fun x -> print(x; y. y)) "C")
Step 1:  with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle ((print("A"; y. y); (fun x -> print(x; y. y)) "B"); (fun x -> print(x; y. y)) "C")
Step 2:  with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (print("A"; y. (y; (fun x -> print(x; y. y)) "B")); (fun x -> print(x; y. y)) "C")
Step 2:  with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (print("A"; y. (y; (fun x -> print(x; y. y)) "B")); (fun x -> print(x; y. y)) "C")
Step 3:  with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle print("A"; y. ((y; (fun x -> print(x; y. y)) "B"); (fun x -> print(x; y. y)) "C"))
Step 3:  with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle print("A"; y. ((y; (fun x -> print(x; y. y)) "B"); (fun x -> print(x; y. y)) "C"))
Step 4:  do (x, acc) <- (fun y -> with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle ((y; (fun x -> print(x; y. y)) "B"); (fun x -> print(x; y. y)) "C")) () in (x, join "A" acc)
Step 4:  do (x, acc) <- (fun y -> with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle ((y; (fun x -> print(x; y. y)) "B"); (fun x -> print(x; y. y)) "C")) () in (x, join "A" acc)
Step 5:  do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (((); (fun x -> print(x; y. y)) "B"); (fun x -> print(x; y. y)) "C")) in (x, join "A" acc)
Step 5:  do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (((); (fun x -> print(x; y. y)) "B"); (fun x -> print(x; y. y)) "C")) in (x, join "A" acc)
Step 6:  do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle ((fun x -> print(x; y. y)) "B"; (fun x -> print(x; y. y)) "C")) in (x, join "A" acc)
Step 6:  do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle ((fun x -> print(x; y. y)) "B"; (fun x -> print(x; y. y)) "C")) in (x, join "A" acc)
Step 7:  do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (print("B"; y. y); (fun x -> print(x; y. y)) "C")) in (x, join "A" acc)
Step 7:  do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (print("B"; y. y); (fun x -> print(x; y. y)) "C")) in (x, join "A" acc)
Step 8:  do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle print("B"; y. (y; (fun x -> print(x; y. y)) "C"))) in (x, join "A" acc)
Step 8:  do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle print("B"; y. (y; (fun x -> print(x; y. y)) "C"))) in (x, join "A" acc)
Step 9:  do (x, acc) <- (do (x, acc) <- (fun y -> with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (y; (fun x -> print(x; y. y)) "C")) () in (x, join "B" acc)) in (x, join "A" acc)
Step 9:  do (x, acc) <- (do (x, acc) <- (fun y -> with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (y; (fun x -> print(x; y. y)) "C")) () in (x, join "B" acc)) in (x, join "A" acc)
Step 10:  do (x, acc) <- (do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle ((); (fun x -> print(x; y. y)) "C")) in (x, join "B" acc)) in (x, join "A" acc)
Step 10:  do (x, acc) <- (do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle ((); (fun x -> print(x; y. y)) "C")) in (x, join "B" acc)) in (x, join "A" acc)
Step 11:  do (x, acc) <- (do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (fun x -> print(x; y. y)) "C") in (x, join "B" acc)) in (x, join "A" acc)
Step 11:  do (x, acc) <- (do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle (fun x -> print(x; y. y)) "C") in (x, join "B" acc)) in (x, join "A" acc)
Step 12:  do (x, acc) <- (do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle print("C"; y. y)) in (x, join "B" acc)) in (x, join "A" acc)
Step 12:  do (x, acc) <- (do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle print("C"; y. y)) in (x, join "B" acc)) in (x, join "A" acc)
Step 13:  do (x, acc) <- (do (x, acc) <- (do (x, acc) <- (fun y -> with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle y) () in (x, join "C" acc)) in (x, join "B" acc)) in (x, join "A" acc)
Step 13:  do (x, acc) <- (do (x, acc) <- (do (x, acc) <- (fun y -> with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle y) () in (x, join "C" acc)) in (x, join "B" acc)) in (x, join "A" acc)
Step 14:  do (x, acc) <- (do (x, acc) <- (do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle ()) in (x, join "C" acc)) in (x, join "B" acc)) in (x, join "A" acc)
Step 14:  do (x, acc) <- (do (x, acc) <- (do (x, acc) <- (with handler {return x -> (x, ""), print(s; k) -> do (x, acc) <- k () in (x, join s acc)} handle ()) in (x, join "C" acc)) in (x, join "B" acc)) in (x, join "A" acc)
Step 15:  do (x, acc) <- (do (x, acc) <- (do (x, acc) <- ((), "") in (x, join "C" acc)) in (x, join "B" acc)) in (x, join "A" acc)
Step 15:  do (x, acc) <- (do (x, acc) <- (do (x, acc) <- ((), "") in (x, join "C" acc)) in (x, join "B" acc)) in (x, join "A" acc)
Step 16:  do (x, acc) <- (do (x, acc) <- ((), join "C" "") in (x, join "B" acc)) in (x, join "A" acc)
Step 16:  do (x, acc) <- (do (x, acc) <- ((), join "C" "") in (x, join "B" acc)) in (x, join "A" acc)
Step 17:  do (x, acc) <- (do (x, acc) <- ((), "C") in (x, join "B" acc)) in (x, join "A" acc)
Step 17:  do (x, acc) <- (do (x, acc) <- ((), "C") in (x, join "B" acc)) in (x, join "A" acc)
Step 18:  do (x, acc) <- ((), join "B" "C") in (x, join "A" acc)
Step 18:  do (x, acc) <- ((), join "B" "C") in (x, join "A" acc)
Step 19:  do (x, acc) <- ((), "B C") in (x, join "A" acc)
Step 19:  do (x, acc) <- ((), "B C") in (x, join "A" acc)
Step 20:  ((), join "A" "B C")
Step 20:  ((), join "A" "B C")
Step 21:  ((), "A B C")
Result:  ((), "A B C")
